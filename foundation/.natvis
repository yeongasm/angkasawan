<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <Type Name="ftl::AllocatorBase::MemoryHeader&lt;*&gt;">
    <Expand>
      <Item Name="[allocator]">m_allocator</Item>
      <Item Name="[size]">m_size</Item>
    </Expand>
  </Type>

  <Type Name="ftl::UniquePtr&lt;*&gt;">
    <DisplayString>UniquePtr for address {m_data}</DisplayString>
    <Expand>
      <Item Name="[ptr]">m_data</Item>
    </Expand>
  </Type>
  
  <Type Name="ftl::Ref&lt;*&gt;">
    <DisplayString>Ref referencing address {m_data}</DisplayString>
    <Expand>
      <Item Name="[reference]">m_data</Item>
    </Expand>
  </Type>

  <Type Name="ftl::AllocatorMemoryInterface&lt;*&gt;">
    <Expand>
      <Item Name="[allocator]">m_allocator</Item>
    </Expand>
  </Type>

  <Type Name="ftl::Array&lt;*&gt;">
    <DisplayString>Array with {m_len} elements</DisplayString>
    <Expand>
      <Item Name="[length]">m_len</Item>
      <Item Name="[capacity]">m_capacity</Item>
      <Item Name="[allocator]" Optional="true">m_allocator</Item>
      <ArrayItems>
        <Size>m_len</Size>
        <ValuePointer>m_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ftl::StaticArray&lt;*&gt;">
    <DisplayString>StaticArray[{$T2}] with {m_len} elements</DisplayString>
    <Expand>
      <Item Name="[length]">m_len</Item>
      <Item Name="[capacity]">m_capacity</Item>
      <ArrayItems>
        <Size>m_len</Size>
        <ValuePointer>m_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ftl::Bitset&lt;*&gt;">
    <DisplayString>Bitset with {$T2} bits</DisplayString>
    <Expand>
      <Item Name="[bits_per_word]">bitsPerWord</Item>
      <Item Name="[words]">word + 1</Item>
      <ArrayItems>
        <Size>word + 1</Size>
        <ValuePointer>m_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ftl::HashImpl&lt;*&gt;::BucketInfo">
    <DisplayString>Bucket storing data {*m_data}</DisplayString>
    <Expand>
      <Item Name="[data]">m_data</Item>
      <Item Name="[hash]">m_hash</Item>
      <Item Name="[bucket]">m_bucket</Item>
      <Item Name="[probe_sequence_length]">m_psl</Item>
      <Item Name="[is_last_bucket]">m_lastBucket</Item>
    </Expand>
  </Type>

  <Type Name="ftl::Map&lt;*&gt;">
    <DisplayString>Map with {m_len} elements</DisplayString>
    <Expand>
      <Item Name="[length]">m_len</Item>
      <Item Name="[capacity]">m_capacity</Item>
      <Item Name="[buckets_remaining]">m_capacity - m_len</Item>
      <CustomListItems MaxItemsPerView="100" ExcludeView="Test">
        <Variable Name="i" InitialValue="0"/>
        <Size>m_len</Size>
        <Loop>
          <If Condition="m_info[i].m_hash != 0">
            <Item>m_info[i]</Item>
          </If>
          <Exec>++i</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="ftl::Set&lt;*&gt;">
    <DisplayString>Set with {m_len} elements</DisplayString>
    <Expand>
      <Item Name="[length]">m_len</Item>
      <Item Name="[capacity]">m_capacity</Item>
      <Item Name="[buckets_remaining]">m_capacity - m_len</Item>
      <CustomListItems MaxItemsPerView="100" ExcludeView="Test">
        <Variable Name="i" InitialValue="0"/>
        <Size>m_len</Size>
        <Loop>
          <If Condition="m_info[i].m_hash != 0">
            <Item>m_info[i]</Item>
          </If>
          <Exec>++i</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="ftl::BasicString&lt;char,*&gt;">
    <AlternativeType Name="ftl::String"/>

    <Intrinsic Name="capacity" Expression="m_capacity"/>
    <Intrinsic Name="is_small_string" Expression="capacity() == 2147483672"/>
    <Intrinsic Name="is_large_string" Expression="capacity() != 2147483672"/>
    
    <DisplayString Condition="is_small_string()">{m_buffer,na}</DisplayString>
    <DisplayString Condition="is_large_string()">{m_data,na}</DisplayString>
    <StringView Condition="is_small_string()">m_buffer,na</StringView>
    <StringView Condition="is_large_string()">m_data,na</StringView>
    <Expand>
      <Item Name="length">m_len</Item>
      <Item Name="capacity">m_capacity</Item>
      <Item Name="is_small_string">is_small_string()</Item>
      <ArrayItems>
        <Size>m_len</Size>
        <ValuePointer Condition="is_small_string()">m_buffer</ValuePointer>
        <ValuePointer Condition="is_large_string()">m_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  
  <Type Name="ftl::BasicString&lt;wchar_t,*&gt;">
    <AlternativeType Name="ftl::UniString"/>

    <Intrinsic Name="capacity" Expression="m_capacity"/>
    <Intrinsic Name="is_small_string" Expression="capacity() == 2147483660"/>
    <Intrinsic Name="is_large_string" Expression="capacity() != 2147483660"/>

    <DisplayString Condition="is_small_string()">{m_buffer,su}</DisplayString>
    <DisplayString Condition="is_large_string()">{m_data,su}</DisplayString>
    <StringView Condition="is_small_string()">m_buffer,su</StringView>
    <StringView Condition="is_large_string()">m_data,su</StringView>
    <Expand>
      <Item Name="length">m_len</Item>
      <Item Name="capacity">m_capacity</Item>
      <Item Name="is_small_string">is_small_string()</Item>
      <ArrayItems>
        <Size>m_len</Size>
        <ValuePointer Condition="is_small_string()">m_buffer</ValuePointer>
        <ValuePointer Condition="is_large_string()">m_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ftl::BaseStaticString&lt;char,*&gt;">
    <DisplayString>{m_buf,na}</DisplayString>
    <Expand>
      <Item Name="length">m_len</Item>
      <ArrayItems>
        <Size>m_len</Size>
        <ValuePointer>m_buf</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="ftl::BaseStaticString&lt;wchar_t,*&gt;">
    <DisplayString>{m_buf,su}</DisplayString>
    <Expand>
      <Item Name="length">m_len</Item>
      <ArrayItems>
        <Size>m_len</Size>
        <ValuePointer>m_buf</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="math::Vector2&lt;*&gt;">
    <DisplayString>x={x}, y={y}</DisplayString>
    <Expand>
      <Item Name="x">x</Item>
      <Item Name="y">y</Item>
    </Expand>
  </Type>

  <Type Name="math::Vector3&lt;*&gt;">
    <DisplayString>x={x}, y={y}, z={z}</DisplayString>
    <Expand>
      <Item Name="x">x</Item>
      <Item Name="y">y</Item>
      <Item Name="z">z</Item>
    </Expand>
  </Type>

  <Type Name="math::Vector4&lt;*&gt;">
    <DisplayString>x={x}, y={y}, z={z}, w={w}</DisplayString>
    <Expand>
      <Item Name="x">x</Item>
      <Item Name="y">y</Item>
      <Item Name="z">z</Item>
      <Item Name="w">w</Item>
    </Expand>
  </Type>

  <Type Name="math::Quaternion&lt;*&gt;">
    <DisplayString>w={w}, x={x}, y={y}, z={z}</DisplayString>
    <Expand>
      <Item Name="w">w</Item>
      <Item Name="x">x</Item>
      <Item Name="y">y</Item>
      <Item Name="z">z</Item>
    </Expand>
  </Type>

  <Type Name="math::Matrix3x3&lt;*&gt;">
    <DisplayString>[{m00}, {m01}, {m02}], [{m10}, {m11}, {m12}], [{m20}, {m21}, {m22}]</DisplayString>
  </Type>

  <Type Name="math::Matrix4x4&lt;*&gt;">
    <DisplayString>[{m00}, {m01}, {m02}, {m03}], [{m10}, {m11}, {m12}, {m13}], [{m20}, {m21}, {m22}, {m23}], [{m30}, {m31}, {m32}, {m33}]</DisplayString>
  </Type>

</AutoVisualizer>